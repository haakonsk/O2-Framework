use strict;

use Test::More qw(no_plan);
use Time::HiRes qw(time);
use O2 qw($context $config);
use O2::Util::SetApacheEnv;
use O2::Script::Test::Common;

my $cache = $context->getMemcached();
my $lang  = $context->getLang();

my %tests = (
  strings => [
    'o2.defaultLocale',
    'o2.encodeEntities',
    'publisher.publisherModule',
    'publisher.autoGeneratedSignature',
    'file.basePath',
    'dispatcher.guiModuleUrlPrefix',
  ],
  arrays => [
    'o2.apache.binaryPaths',
  ],
  hashes => [
    'o2.imageResize',
  ],
  lang => [
    'o2.article.editor.applicationName',
    'o2.article.editor.boxMenu.lblArticle',
    'o2.article.general.readMore',
    'o2.desktop.lblCloseWindow',
  ],
);

if ($cache->isa('O2::Cache::Dummy')) {
  diag "Can't test caching. Cache object is a O2::Cache::Dummy object.";
  exit;
}

diag 'Type of cache: ' . ref $cache;

# Get config values without using the cache
my $totalTime = 0;
my %correctValue;
foreach my $configKey (@{ $tests{strings} }) {
  my $t0 = time;
  $correctValue{$configKey} = $config->get($configKey);
  $totalTime += time - $t0;
}
foreach my $configKey (@{ $tests{arrays} }) {
  my $t0 = time;
  $correctValue{$configKey} = [ $config->getArray($configKey) ];
  $totalTime += time - $t0;
}
foreach my $configKey (@{ $tests{hashes} }) {
  my $t0 = time;
  $correctValue{$configKey} = { $config->getHash($configKey) };
  $totalTime += time - $t0;
}
foreach my $configKey (@{ $tests{lang} }) {
  my $t0 = time;
  $correctValue{$configKey} = $lang->getString($configKey);
  $totalTime += time - $t0;
}
diag "Without caching: $totalTime seconds.";

# Now get those same values using the cache (second time in the loop, we're guaranteed that the config values are fetched from the cache)
$config->setCacheHandler($cache);
for my $i (0 .. 1) {
  $totalTime = 0;
  foreach my $configKey (@{ $tests{strings} }) {
    my $configValue = $config->get($configKey);
    if ($i > 0) {
      my $t0 = time;
      is($configValue, $correctValue{$configKey}, $configKey);
      $totalTime += time - $t0;
    }
  }
  foreach my $configKey (@{ $tests{arrays} }) {
    my $configValue = [ $config->getArray($configKey) ];
    if ($i > 0) {
      my $t0 = time;
      $totalTime += time - $t0;
    }
    is_deeply($configValue, $correctValue{$configKey}, $configKey);
  }
  foreach my $configKey (@{ $tests{hashes} }) {
    my $configValue = { $config->getHash($configKey) };
    if ($i > 0) {
      my $t0 = time;
      $totalTime += time - $t0;
    }
    is_deeply($configValue, $correctValue{$configKey}, $configKey);
  }
  foreach my $configKey (@{ $tests{lang} }) {
    my $configValue = $lang->getString($configKey);
    if ($i > 0) {
      my $t0 = time;
      $totalTime += time - $t0;
    }
    is($configValue, $correctValue{$configKey}, "getString($configKey) = \"$configValue\"");
  }
  diag "With caching: $totalTime seconds." if $i > 0;
}
